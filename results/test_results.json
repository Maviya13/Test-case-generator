{"created": 1758290656.49431, "duration": 0.06800413131713867, "exitcode": 1, "root": "D:\\code playground\\projects\\ai-tester", "environment": {}, "summary": {"passed": 10, "failed": 1, "total": 11, "collected": 11}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "tests/test_generated.py", "type": "Module"}]}, {"nodeid": "tests/test_generated.py", "outcome": "passed", "result": [{"nodeid": "tests/test_generated.py::test_hello_baseline", "type": "Function", "lineno": 6}, {"nodeid": "tests/test_generated.py::test_add_baseline", "type": "Function", "lineno": 14}, {"nodeid": "tests/test_generated.py::test_hello_valid_input", "type": "Function", "lineno": 31}, {"nodeid": "tests/test_generated.py::test_hello_empty_input", "type": "Function", "lineno": 37}, {"nodeid": "tests/test_generated.py::test_hello_none_input", "type": "Function", "lineno": 43}, {"nodeid": "tests/test_generated.py::test_hello_numeric_input", "type": "Function", "lineno": 49}, {"nodeid": "tests/test_generated.py::test_hello_special_characters", "type": "Function", "lineno": 55}, {"nodeid": "tests/test_generated.py::test_hello_long_name", "type": "Function", "lineno": 61}, {"nodeid": "tests/test_generated.py::test_add_valid_integers", "type": "Function", "lineno": 73}, {"nodeid": "tests/test_generated.py::test_add_strings", "type": "Function", "lineno": 79}, {"nodeid": "tests/test_generated.py::test_add_mixed_types_integer_first", "type": "Function", "lineno": 85}]}], "tests": [{"nodeid": "tests/test_generated.py::test_hello_baseline", "lineno": 6, "outcome": "passed", "keywords": ["test_hello_baseline", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00040469999657943845, "outcome": "passed"}, "call": {"duration": 0.00042470000335015357, "outcome": "passed"}, "teardown": {"duration": 0.0003015999973285943, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_add_baseline", "lineno": 14, "outcome": "passed", "keywords": ["test_add_baseline", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00025710000772960484, "outcome": "passed"}, "call": {"duration": 0.0002499000111129135, "outcome": "passed"}, "teardown": {"duration": 0.00020680000307038426, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_hello_valid_input", "lineno": 31, "outcome": "passed", "keywords": ["test_hello_valid_input", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00019109999993816018, "outcome": "passed"}, "call": {"duration": 0.00021550001110881567, "outcome": "passed"}, "teardown": {"duration": 0.00020299997413530946, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_hello_empty_input", "lineno": 37, "outcome": "passed", "keywords": ["test_hello_empty_input", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00018069997895509005, "outcome": "passed"}, "call": {"duration": 0.0001905999961309135, "outcome": "passed"}, "teardown": {"duration": 0.00017640000442042947, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_hello_none_input", "lineno": 43, "outcome": "passed", "keywords": ["test_hello_none_input", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00016269998741336167, "outcome": "passed"}, "call": {"duration": 0.00017339998157694936, "outcome": "passed"}, "teardown": {"duration": 0.00015050001093186438, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_hello_numeric_input", "lineno": 49, "outcome": "passed", "keywords": ["test_hello_numeric_input", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00014480002573691308, "outcome": "passed"}, "call": {"duration": 0.0001503000094089657, "outcome": "passed"}, "teardown": {"duration": 0.00014360001659952104, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_hello_special_characters", "lineno": 55, "outcome": "passed", "keywords": ["test_hello_special_characters", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.000142400007462129, "outcome": "passed"}, "call": {"duration": 0.00014819999341852963, "outcome": "passed"}, "teardown": {"duration": 0.00013729999773204327, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_hello_long_name", "lineno": 61, "outcome": "passed", "keywords": ["test_hello_long_name", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00012499999138526618, "outcome": "passed"}, "call": {"duration": 0.0001235000090673566, "outcome": "passed"}, "teardown": {"duration": 0.00013880000915378332, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_add_valid_integers", "lineno": 73, "outcome": "passed", "keywords": ["test_add_valid_integers", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00012099999003112316, "outcome": "passed"}, "call": {"duration": 0.00011910000466741621, "outcome": "passed"}, "teardown": {"duration": 0.00011619998258538544, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_add_strings", "lineno": 79, "outcome": "passed", "keywords": ["test_add_strings", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00012660000356845558, "outcome": "passed"}, "call": {"duration": 0.00011989998165518045, "outcome": "passed"}, "teardown": {"duration": 0.00011219998123124242, "outcome": "passed"}}, {"nodeid": "tests/test_generated.py::test_add_mixed_types_integer_first", "lineno": 85, "outcome": "failed", "keywords": ["test_add_mixed_types_integer_first", "test_generated.py", "tests", "ai-tester", ""], "setup": {"duration": 0.00018569998792372644, "outcome": "passed"}, "call": {"duration": 0.00040260000969283283, "outcome": "failed", "crash": {"path": "D:\\code playground\\projects\\ai-tester\\tests\\test_generated.py", "lineno": 90, "message": "assert 'can only concatenate str (not \"int\") to str' in \"unsupported operand type(s) for +: 'int' and 'str'\"\n +  where \"unsupported operand type(s) for +: 'int' and 'str'\" = str(TypeError(\"unsupported operand type(s) for +: 'int' and 'str'\"))\n +    where TypeError(\"unsupported operand type(s) for +: 'int' and 'str'\") = <ExceptionInfo TypeError(\"unsupported operand type(s) for +: 'int' and 'str'\") tblen=2>.value"}, "traceback": [{"path": "tests\\test_generated.py", "lineno": 90, "message": "in test_add_mixed_types_integer_first"}], "longrepr": "tests\\test_generated.py:90: in test_add_mixed_types_integer_first\n    assert \"can only concatenate str (not \\\"int\\\") to str\" in str(excinfo.value)\nE   assert 'can only concatenate str (not \"int\") to str' in \"unsupported operand type(s) for +: 'int' and 'str'\"\nE    +  where \"unsupported operand type(s) for +: 'int' and 'str'\" = str(TypeError(\"unsupported operand type(s) for +: 'int' and 'str'\"))\nE    +    where TypeError(\"unsupported operand type(s) for +: 'int' and 'str'\") = <ExceptionInfo TypeError(\"unsupported operand type(s) for +: 'int' and 'str'\") tblen=2>.value"}, "teardown": {"duration": 0.00013230001786723733, "outcome": "passed"}}]}